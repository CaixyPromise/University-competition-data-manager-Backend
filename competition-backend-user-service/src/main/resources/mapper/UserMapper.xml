<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.caixy.userservice.mapper.UserMapper">

    <resultMap id="BaseResultMap" type="com.caixy.model.entity.User">
        <id property="id" column="id" jdbcType="BIGINT"/>
        <result property="userAccount" column="userAccount" jdbcType="VARCHAR"/>
        <result property="userPassword" column="userPassword" jdbcType="VARCHAR"/>
        <result property="userEmail" column="userEmail" jdbcType="VARCHAR"/>
        <result property="userPhone" column="userPhone" jdbcType="VARCHAR"/>
        <result property="userDepartment" column="userDepartment" jdbcType="BIGINT"/>
        <result property="userSex" column="userSex" jdbcType="TINYINT"/>
        <result property="userMajor" column="userMajor" jdbcType="BIGINT"/>
        <result property="userName" column="userName" jdbcType="VARCHAR"/>
        <result property="userTags" column="userTags" jdbcType="VARCHAR"/>
        <result property="userAvatar" column="userAvatar" jdbcType="VARCHAR"/>
        <result property="userProfile" column="userProfile" jdbcType="VARCHAR"/>
        <result property="userRole" column="userRole" jdbcType="VARCHAR"/>
        <result property="userRoleLevel" column="userRoleLevel" jdbcType="INTEGER"/>
        <result property="createTime" column="createTime" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="updateTime" jdbcType="TIMESTAMP"/>
        <result property="isDelete" column="isDelete" jdbcType="TINYINT"/>
    </resultMap>

    <sql id="Base_Column_List">
        id
        ,userAccount,userPassword,
        userEmail,userPhone,userDepartment,
        userMajor,userName,
        userTags,userAvatar,userProfile,
        userRole,userRoleLevel,createTime,
        updateTime,isDelete
    </sql>

    <sql id="Base_User_Query">
        SELECT u.id,
               u.userAccount,
               u.userEmail,
               u.userPhone,
               u.userName,
               u.userAvatar,
               u.userRole,
               u.createTime,
               u.updateTime,
               d.name AS departmentName,
               m.name AS majorName
        FROM user u
                 LEFT JOIN department_info d ON u.userDepartment = d.id
                 LEFT JOIN major_info m ON u.userMajor = m.id
        WHERE u.isDelete = 0
    </sql>


    <select id="getUserWithDepartmentMajor" resultType="com.caixy.model.vo.department.UserDepartmentMajorVO">
        <include refid="Base_User_Query" />
    </select>

    <select id="listUserDetailsByPage" resultType="com.caixy.model.vo.department.UserDepartmentMajorVO">
        <include refid="Base_User_Query" />
    </select>
    <select id="getUserWorkVO" resultType="com.caixy.model.vo.user.UserWorkVO">
        SELECT u.userName,
               d.name AS userDepartment,
               m.name AS userMajor,
               u.userAccount AS userAccount,
               u.userEmail AS userEmail
        FROM user u
             LEFT JOIN department_info d ON u.userDepartment = d.id
             LEFT JOIN major_info m ON u.userMajor = m.id
        WHERE u.isDelete = 0
          AND u.id = #{userId}
    </select>

    <select id="getUserWorkVOList" resultType="com.caixy.model.vo.user.UserWorkVO">
        SELECT u.userName,
        d.name AS userDepartment,
        m.name AS userMajor,
        u.userAccount AS userAccount,
        u.id AS userId
--         u.userEmail AS userEmail
        FROM user u
        LEFT JOIN department_info d ON u.userDepartment = d.id
        LEFT JOIN major_info m ON u.userMajor = m.id
        WHERE u.isDelete = 0
        AND u.id IN
        <foreach item="userId" collection="userIds" open="(" separator="," close=")">
            #{userId}
        </foreach>
    </select>

    <select id="getAboutMe" resultType="com.caixy.model.dto.user.AboutMeDTO">
        SELECT u.userName,
               d.name AS userDepartment,
               m.name AS userMajor,
               u.userAccount AS userAccount,
               u.userEmail AS userEmail,
               u.id AS userId,
               u.userAvatar AS userAvatar,
               u.userSex AS userSex,
               u.userTags AS userTags,
               u.userProfile AS userProfile,
               w.balance AS balance
        FROM user u
                 INNER JOIN user_wallet w ON u.id = w.userId
                 LEFT JOIN department_info d ON u.userDepartment = d.id
                 LEFT JOIN major_info m ON u.userMajor = m.id
        WHERE u.isDelete = 0
          AND u.id = #{userId}
    </select>


</mapper>
